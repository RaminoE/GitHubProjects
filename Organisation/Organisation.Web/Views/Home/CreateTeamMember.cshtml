@model Organisation.Web.ViewModels.TeamMemberViewModel

@{
    ViewBag.Title = "CreateTeamMember";
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>



<script type="text/javascript">
    $(document).ready(function () {
        var selectedDT = $("#memberstatus").val();

        if (selectedDT == "") {
            $("#rowBillablestatus").hide();
            $("#rowTeam").hide();
        }
        else if (selectedDT == null) {

        }
        else if (selectedDT == 0) {

            $("#rowBillablestatus").show();
            $("#rowTeam").show();
        }
        else {

            $("#rowBillablestatus").hide();
            $("#rowTeam").hide();
        }
    });

    $(function () {

        $('#memberstatus').change(function () {

            var selectedDT = $("#memberstatus").val();


            if (selectedDT != "") {
                if (selectedDT == 0) {



                    $("#Billablestatus").val("");

                    $("#rowBillablestatus").show();
                    $("#rowTeam").show();
                }
                else {


                    $("#Billablestatus").val("");

                    $("#rowBillablestatus").hide();
                    $("#rowTeam").hide();
                }

            }
            else {
                $("#Billablestatus").val("");
                $("#rowBillablestatus").hide();
                $("#rowTeam").hide();
            }


        });
    });
</script>
@using (Html.BeginForm("CreateTeamMember", "Home", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-inline" }))
{

    @Html.AntiForgeryToken()

    <br />
    <div class="panel panel-success panelpg">
        @if (Model.mode == 1)
                { <div class="panel-heading" style="background-color:#b1ca41; color:white">Edit Member</div>}
                else if (Model.mode == 0)
                {
            <div class="panel-heading" style="background-color:#b1ca41; color:white">Member Details<span class="pull-right"></div>
        }
        else if (Model.mode == 2)
        {
            <div class="panel-heading" style="background-color:#b1ca41; color:white">Create Member</div>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="panel-body ">

            <div class="row" style="font-size:12px">
                <div class="col-md-3">
                    <img src="../../images/@Model.Image" class="col-md-12 thumbnail" />
                </div>
                <div class="col-md-4 ">
                    <div class="row space">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;", @readonly = "readonly" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            }

                        </div>
                    </div>
                    <div class="row space">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.EditorFor(model => model.Designation, new
                           {
                               htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent", @readonly = "readonly" }
                           })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;" } })
                                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>
                    <div class="row space">


                        <div class="col-md-3">
                            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.EditorFor(model => model.DOB, new
                           {
                               htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent", @readonly = "readonly" }
                           })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;" } })
                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>
                    @if (Model.mode == 0)
                    {

                    }
                    else
                    {
                        <div class="row space">

                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label " })
                            </div>

                            <div class="col-md-7">
                                <input type="file" class="form-control" name="file" placeholder="Select picture..">

                                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    <div class="row space">


                        <div class="col-md-3">
                            @Html.LabelFor(model => model.IsTeanLead, htmlAttributes: new { @class = "control-label " })
                        </div>  <div class="col-md-7">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsTeanLead)
                                @Html.ValidationMessageFor(model => model.IsTeanLead, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row space">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.BriefDescription, htmlAttributes: new { @class = "control-label " })
                        </div> <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.TextAreaFor(model => model.BriefDescription, 2, 50, new
                           {
                               htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent", @readonly = true }
                           })
                            }
                            else
                            {
                                @Html.TextAreaFor(model => model.BriefDescription, 2, 50, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BriefDescription, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>
                    <div class="row space">

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.HighestQualification, htmlAttributes: new { @class = "control-label " })
                        </div>   <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.EditorFor(model => model.HighestQualification, new
                           {
                               htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent", @readonly = "readonly" }
                           })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.HighestQualification, new { htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;" } })
                                @Html.ValidationMessageFor(model => model.HighestQualification, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>
                    <div class="row space">

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                        </div>   <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.TextAreaFor(model => model.Address, 2, 50, new
                           {
                               htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent", @readonly = true }
                           })
                            }
                            else
                            {
                                @Html.TextAreaFor(model => model.Address, 2, 50, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>
                    <div class="row space">


                        <div class="col-md-3">
                            @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label" })
                        </div> <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.EditorFor(model => model.phoneNumber, new
                           {
                               htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent", @readonly = "readonly" }
                           })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;" } })
                                @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>



                </div>
                <div class="col-md-5">
                    <div class="row space">

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.YearOfPassing, htmlAttributes: new { @class = "control-label " })
                        </div>  <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.EditorFor(model => model.YearOfPassing, new
                           {
                               htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent", @readonly = "readonly" }
                           })
                            }
                            else
                            {
                                @Html.DropDownListFor(x => x.YearOfPassing, new SelectList(Model.YearPass, new { htmlAttributes = new { @class = "form-control", @style = "width:100% ;font-size:12px;height:30px;" } }),
                                    "Select Year")
                                @Html.ValidationMessageFor(model => model.YearOfPassing, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>



                    <div class="row space">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.YearofJoiningCCI, htmlAttributes: new { @class = "control-label" })
                        </div> <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.EditorFor(model => model.YearofJoiningCCI, new
                           {
                               htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent", @readonly = "readonly" }
                           })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.YearofJoiningCCI, new { htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;" } })
                                @Html.ValidationMessageFor(model => model.YearofJoiningCCI, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>
                    <div class="row space">

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.YearofJoiningTeam, htmlAttributes: new { @class = "control-label " })
                        </div>  <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.EditorFor(model => model.YearofJoiningTeam, new
                           {
                               htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent", @readonly = "readonly" }
                           })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.YearofJoiningTeam, "dd-MM-yyyy", new { htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;" } })
                                @Html.ValidationMessageFor(model => model.YearofJoiningTeam, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>

                    <div class="row space">





                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Technologies, htmlAttributes: new { @class = "control-label" })
                        </div>  <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.TextAreaFor(model => model.Technologies, 2, 50, new
                           {
                               htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent", @readonly = true }
                           })
                            }
                            else
                            {
                                @Html.TextAreaFor(model => model.Technologies, 2, 50, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Technologies, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>
                    <div class="row space">


                        <div class="col-md-3">
                            @Html.LabelFor(model => model.SkypeId, htmlAttributes: new { @class = "control-label " })
                        </div>  <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.EditorFor(model => model.SkypeId, new
                           {
                               htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent", @readonly = "readonly" }
                           })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.SkypeId, new { htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;" } })
                                @Html.ValidationMessageFor(model => model.SkypeId, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>
                    <div class="row space">


                        <div class="col-md-3">
                            @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label" })
                        </div> <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.EditorFor(model => model.EmailId, new
                           {
                               htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent", @readonly = "readonly" }
                           })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;" } })
                                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>
                    <div class="row space">


                        <div class="col-md-3">
                            @Html.LabelFor(model => model.GmailId, htmlAttributes: new { @class = "control-label " })
                        </div>  <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.EditorFor(model => model.GmailId, new
                           {
                               htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent", @readonly = "readonly" }
                           })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.GmailId, new { htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;" } })
                                @Html.ValidationMessageFor(model => model.GmailId, "", new { @class = "text-danger" })
                            }
                        </div>
                    </div>
                    <div class="row space">



                        <div class="col-md-3">
                            @Html.LabelFor(model => model.MemberStatus, htmlAttributes: new { @class = "control-label " })
                        </div>   <div class="col-md-7">
                            @if (Model.mode == 0)
                            {
                                @Html.EditorFor(model => model.MemberStatus, new
                          {
                              htmlAttributes = new
                              {
                                  @class = "form-control",
                                  @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent",
                                  @readonly = "readonly"
                              }
                          })
                            }
                            else
                            {
                                @Html.EnumDropDownListFor(model => model.MemberStatus, "Select Status", htmlAttributes: new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:30px;", id = "memberstatus" })
                                @Html.ValidationMessageFor(model => model.MemberStatus, "", new { @class = "text-danger" })
                            }
                        </div>

                    </div>

                    @if (Model.mode == 0)
                    {
                        <div id="rowBillablestatus" class="row space">



                            <div class="col-md-3">
                                @Html.LabelFor(model => model.BillableStatus, htmlAttributes: new { @class = "control-label " })
                            </div>   <div class="col-md-7">

                                @Html.EditorFor(model => model.BillableStatus, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control",
                                   @style = "width:100%  ;font-size:12px;height:20px;, background-color:transparent",
                                   @readonly = "readonly"
                               }
                           })
                            </div>

                        </div>

                    }
                    else
                    {


                        <div id="rowBillablestatus" hidden="hidden" class="row space">



                            <div class="col-md-3">
                                @Html.LabelFor(model => model.BillableStatus, htmlAttributes: new { @class = "control-label " })
                            </div>   <div class="col-md-7">
                                @Html.EnumDropDownListFor(model => model.BillableStatus, "Select Status", htmlAttributes: new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:30px;", id = "Billablestatus" })
                                @Html.ValidationMessageFor(model => model.BillableStatus, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    }

                    @if (Model.mode == 0)
                    {
                        <div id="rowTeam" class="row">



                            <div class="col-md-3">
                                @Html.LabelFor(model => model.TeamId, htmlAttributes: new { @class = "control-label " })
                            </div>   <div class="col-md-7">
                                @Html.DropDownListFor(x => x.TeamId, new SelectList(Model.TeamList, "Id", "Name", new { @class = "form-control", id = "team", @readonly = "readonly" }),
"Select Team")
                                @Html.ValidationMessageFor(model => model.TeamId, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    }
                    else
                    {

                        <div id="rowTeam" hidden="hidden" class="row space">



                            <div class="col-md-3">
                                @Html.LabelFor(model => model.TeamId, htmlAttributes: new { @class = "control-label " })
                            </div>   <div class="col-md-7">
                                @Html.DropDownListFor(x => x.TeamId, new SelectList(Model.TeamList, "Id", "Name", new { @class = "form-control", id = "team", @readonly = "readonly" }),
"Select Team")
                                @Html.ValidationMessageFor(model => model.TeamId, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    }



                    <div class="col-md-3" hidden="hidden">
                        @Html.LabelFor(model => model.mode, htmlAttributes: new { @class = "control-label ", @hidden = "hidden" })
                        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @style = "height:0%;visibility:hidden" } })
                    </div>   <div class="col-md-7">
                        @Html.EditorFor(model => model.mode, new { htmlAttributes = new { @class = "form-control", @style = "width:100%  ;font-size:12px;height:20px;; visibility:hidden" } })
                        @Html.ValidationMessageFor(model => model.mode, "", new { @class = "text-danger" })
                    </div>


                </div>
            </div>
            <div class="row">
                <div class="col-md-12 text-center">
                    @if (Model.mode == 1 || Model.mode == 2)
                    {
                        <input type="submit" value="Save" class="btn btn-default" />
                    }
                </div>
            </div>
        </div>
    </div>

    @Html.EditorFor(model => model.previousUrl, new { htmlAttributes = new { @class = "", @hidden = "hidden" } })
}
<div>
    @Html.ActionLink("Back to List", "BackPage", new { url = @Model.previousUrl })
</div>

