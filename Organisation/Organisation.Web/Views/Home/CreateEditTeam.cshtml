@model Organisation.Web.ViewModels.TeamViewModel


@{
    ViewBag.Title = "CreateEditTeam";
}



@using (Html.BeginForm())
{
    

    <br />
    <div class="panel panel-success panelpg">
        @if (Model.mode == 1)
                { <div class="panel-heading" style="background-color:#b1ca41; color:white">Edit Team</div>}
                else if (Model.mode == 0)
                {
            <div class="panel-heading" style="background-color:#b1ca41; color:white">Team Details<span class="pull-right"></div>
        }
        else if (Model.mode == 2)
        {
            <div class="panel-heading" style="background-color:#b1ca41; color:white">Create Team</div>
        }


        <div class="panel-body ">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row space">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="row space">
                <div class="form-group">
                    @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row space">
                <div class="form-group">
                    @Html.LabelFor(model => model.GroupID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(x => x.GroupID, new SelectList(Model.GroupList, "Id", "Name", new { @class = "form-control", id = "team", @readonly = "readonly" }),
"Select Group")
                        @Html.ValidationMessageFor(model => model.GroupID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            @Html.EditorFor(model => model.previousUrl, new { htmlAttributes = new { @class = "", @hidden = "hidden" } })
            <div class="row">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "BackPage", new { url = @Model.previousUrl })
</div>
